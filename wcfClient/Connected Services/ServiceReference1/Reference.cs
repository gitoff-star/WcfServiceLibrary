//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace wcfClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int s1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int s2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int s3Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int s1 {
            get {
                return this.s1Field;
            }
            set {
                if ((this.s1Field.Equals(value) != true)) {
                    this.s1Field = value;
                    this.RaisePropertyChanged("s1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int s2 {
            get {
                return this.s2Field;
            }
            set {
                if ((this.s2Field.Equals(value) != true)) {
                    this.s2Field = value;
                    this.RaisePropertyChanged("s2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int s3 {
            get {
                return this.s3Field;
            }
            set {
                if ((this.s3Field.Equals(value) != true)) {
                    this.s3Field = value;
                    this.RaisePropertyChanged("s3");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTotalMarks", ReplyAction="http://tempuri.org/IService1/GetTotalMarksResponse")]
        int GetTotalMarks(wcfClient.ServiceReference1.Student s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTotalMarks", ReplyAction="http://tempuri.org/IService1/GetTotalMarksResponse")]
        System.Threading.Tasks.Task<int> GetTotalMarksAsync(wcfClient.ServiceReference1.Student s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAvgMarks", ReplyAction="http://tempuri.org/IService1/getAvgMarksResponse")]
        int getAvgMarks(int s1, int s2, int s3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAvgMarks", ReplyAction="http://tempuri.org/IService1/getAvgMarksResponse")]
        System.Threading.Tasks.Task<int> getAvgMarksAsync(int s1, int s2, int s3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCountries", ReplyAction="http://tempuri.org/IService1/GetCountriesResponse")]
        System.Collections.Generic.List<wcfClient.ServiceReference1.Country> GetCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCountries", ReplyAction="http://tempuri.org/IService1/GetCountriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<wcfClient.ServiceReference1.Country>> GetCountriesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : wcfClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<wcfClient.ServiceReference1.IService1>, wcfClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(string value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(string value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public int GetTotalMarks(wcfClient.ServiceReference1.Student s) {
            return base.Channel.GetTotalMarks(s);
        }
        
        public System.Threading.Tasks.Task<int> GetTotalMarksAsync(wcfClient.ServiceReference1.Student s) {
            return base.Channel.GetTotalMarksAsync(s);
        }
        
        public int getAvgMarks(int s1, int s2, int s3) {
            return base.Channel.getAvgMarks(s1, s2, s3);
        }
        
        public System.Threading.Tasks.Task<int> getAvgMarksAsync(int s1, int s2, int s3) {
            return base.Channel.getAvgMarksAsync(s1, s2, s3);
        }
        
        public System.Collections.Generic.List<wcfClient.ServiceReference1.Country> GetCountries() {
            return base.Channel.GetCountries();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<wcfClient.ServiceReference1.Country>> GetCountriesAsync() {
            return base.Channel.GetCountriesAsync();
        }
    }
}
